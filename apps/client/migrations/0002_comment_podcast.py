# Generated by Django 4.2.4 on 2023-08-12 19:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('client', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('likes', models.IntegerField(blank=True, default=0, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('content', models.TextField()),
                ('comments', models.ManyToManyField(blank=True, to='client.comment')),
                ('creator', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='client.user')),
                ('users_disliked', models.ManyToManyField(blank=True, related_name='comment_disliked', to='client.user')),
                ('users_liked', models.ManyToManyField(blank=True, related_name='comment_liked', to='client.user')),
            ],
        ),
        migrations.CreateModel(
            name='Podcast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover', models.ImageField(blank=True, null=True, upload_to='cover/%Y/%m/%d/')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('audio', models.FileField(upload_to='audio/%Y/%m/%d/')),
                ('likes', models.IntegerField(blank=True, default=0, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('authors', models.ManyToManyField(to='client.user')),
                ('comments', models.ManyToManyField(to='client.comment')),
                ('users_disliked', models.ManyToManyField(blank=True, related_name='podcast_disliked', to='client.user')),
                ('users_liked', models.ManyToManyField(blank=True, related_name='podcast_liked', to='client.user')),
            ],
        ),
    ]
